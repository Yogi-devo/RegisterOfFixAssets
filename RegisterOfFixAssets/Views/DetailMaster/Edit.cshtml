@model RegisterOfFixAssets.Models.Detail_Master

@{
    ViewBag.Title = "Edit";
}

@*<h2>Edit</h2>*@


@using (Html.BeginForm("Edit", "DetailMaster", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="panel panel-primary" style="margin-top:30px;">
        <div class="panel-heading">
            <h4>Edit Stock Detail</h4>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="form-horizontal">
                    <div class="col-md-6">


                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.D_ID)
                        @Html.HiddenFor(model => model.Category)
                        @Html.HiddenFor(model => model.item_ID)
                        @Html.HiddenFor(model => model.Status)
                        @Html.HiddenFor(model => model.User_Name)
                        @*<div class="form-group">
            @Html.LabelFor(model => model.item_ID, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.item_ID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.item_ID, "", new { @class = "text-danger" })
            </div>
        </div>*@
                        <div class="form-group">
                            @Html.Label("Item Name", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                               <input type="text" value="@Model.AssetsP.item_name" class="form-control" disabled="disabled" />
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.Label("Supplier Name", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.Supplier_ID, (IEnumerable<SelectListItem>)ViewBag.suppliers, new { @class = "form-control" })
                                @*@Html.EditorFor(model => model.Supplier_ID, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.Supplier_ID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Bill No", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Bill_No, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Bill_No, "", new { @class = "text-danger" })
                            </div>
                        </div>

                      

                        <div class="form-group">
                            @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
            @Html.Label("Room No", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.RoomNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RoomNo, "", new { @class = "text-danger" })
            </div>
        </div>*@
                        <div class="form-group">
                            @Html.Label("File No", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.File_No, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.File_No, "", new { @class = "text-danger" })
                            </div>
                        </div>



                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.Label("Bill Date", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Bill_Date, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Bill_Date, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("User Name", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.selectedValue, (IEnumerable<SelectListItem>)ViewBag.users, new { @class = "form-control" })
                                @*@Html.EditorFor(model => model.User_Name, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.User_Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Unique Id", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Item_Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Item_Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Model Serial No", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Model_SlNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Model_SlNo, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        @*<div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>*@

                        @*<div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>*@

                        <div class="form-group">
                            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
            @Html.LabelFor(model => model.SupplierName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.SupplierName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SupplierName, "", new { @class = "text-danger" })
            </div>
        </div>*@

                        <div class="form-group">
                            <div class="col-md-offset-4 col-md-8">
                                <input type="submit" value="Update Changes" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>


                </div>
            </div>
        </div>
    </div>
}

<div>
    @*<button class="btn btn-success"><i class="fa fa-arrow"> @Html.ActionLink("Back to List", "Index", routeValues: null, htmlAttributes: new { style = "text-decoration:none; color:white" })</i></button>*@
    @*@Html.ActionLink("Back to List", "Index")*@
</div>

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
@section Scripts
{
    @Scripts.Render("~/bundles/jquery")
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#Bill_Date").datepicker({
                changeMonth: true,
                changeYear: true,
                yearRange: "-100:+0", // You can set the year range as per as your need
                dateFormat: 'dd-M-yy'
            });
        })

    </script>
}